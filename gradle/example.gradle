sourceSets {
  examples {
    compileClasspath += main.output
    runtimeClasspath += main.output
  }
}

dependencies {
  compile "org.reflections:reflections:0.9.9-RC1"
}

idea {
  module {
    sourceDirs += file('src/examples/java')
    scopes.COMPILE.plus += configurations.examplesCompile
  }
}

tasks.withType(JavaCompile) {
  sourceCompatibility = 1.6
  targetCompatibility = 1.6
}

tasks.withType(Javadoc) {
  options.addStringOption('Xdoclint:none', '-quiet')
}

tasks.addRule("Pattern: runExample<WidgetName>") { String taskName ->
  if (taskName.startsWith("runExample")) {
    task(taskName, type: JavaExec) {
      ext.sleakDebug = ""
      if (taskName.endsWith("Sleak")) {
        sleakDebug = "sleakDebug"
      }

      ext.widgetName = taskName - "runExample" - "Sleak"

      classpath = sourceSets.examples.runtimeClasspath
      main = "com.readytalk.examples.swt.Examples"
      args "${widgetName}", "${sleakDebug}"

      if (platform == 'darwin') {
        jvmArgs '-XstartOnFirstThread'
      }
    }
  }
}
